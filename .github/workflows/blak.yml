name: Persistent Pterodactyl VPS

on:
  workflow_dispatch:   # Manual run option
  schedule:
    - cron: '*/30 * * * *' # Har 30 minute me auto-run (optional)

jobs:
  vps:
    runs-on: ubuntu-latest
    timeout-minutes: 350

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TAILSCALE_AUTHKEY: ${{ secrets.TAILSCALE_AUTHKEY }}
      REMOTE_VPS_IP: ${{ secrets.REMOTE_VPS_IP }}        # Dusre VPS ka Tailscale IP
      REMOTE_VPS_USER: ${{ secrets.REMOTE_VPS_USER }}    # Dusre VPS ka username
      REMOTE_VPS_PASS: ${{ secrets.REMOTE_VPS_PASS }}    # Dusre VPS ka password

    steps:
      - name: Install tools
        run: |
          sudo apt update
          sudo apt install -y tmate curl unzip sudo net-tools neofetch mariadb-server tar gzip gh sshpass

      - name: GitHub CLI Auth
        run: echo "${GITHUB_TOKEN}" | gh auth login --with-token

      # Restore backup if available
      - name: Download backup parts
        uses: actions/download-artifact@v4
        with:
          name: vps-backup
          path: ./restore
        continue-on-error: true

      - name: Merge and extract backup
        run: |
          if ls ./restore/backup-part* 1> /dev/null 2>&1; then
            cat ./restore/backup-part* > full-backup.tar.gz
            sudo tar -xzp -C / -f full-backup.tar.gz
            echo "‚úÖ Backup restored!"
          else
            echo "‚ÑπÔ∏è No backup found, starting fresh"
          fi

      # Restore Database
      - name: Restore MariaDB
        run: |
          if [ -f /root/ptero-db.sql ]; then
            sudo service mariadb start
            sudo mysql < /root/ptero-db.sql
          fi

      # Tailscale setup
      - name: Install Tailscale
        run: curl -fsSL https://tailscale.com/install.sh | sh

      - name: Start Tailscale
        run: |
          sudo tailscaled &
          sleep 8
          sudo tailscale up --authkey "${TAILSCALE_AUTHKEY}" --hostname=ptero-vps || echo "Tailscale already running"

      # SSH Access
      - name: Start SSH session
        uses: mxschmitt/action-tmate@v3

      # Continuous backup loop
      - name: Continuous backup loop (3 min interval)
        run: |
          sudo service mariadb start
          END_TIME=$((SECONDS + 21600))  # 6 hours in seconds
          while [ $SECONDS -lt $END_TIME ]; do
            echo "‚è≥ Naya backup ban raha hai..."
            sudo mysqldump --all-databases > /root/ptero-db.sql
            if [ $? -ne 0 ]; then
              echo "‚ùå Database dump fail, purana backup safe rahega."
              sleep 180
              continue
            fi

            sudo tar -czp \
              /var/www/pterodactyl \
              /var/lib/pterodactyl \
              /etc/pterodactyl \
              /etc/nginx \
              /etc/letsencrypt \
              /var/lib/mysql \
              /root/.cloudflared \
              /root/ptero-db.sql \
              /var/lib/tailscale/tailscaled.state \
              > full-backup.tar.gz

            if [ $? -eq 0 ]; then
              echo "‚úÖ Naya backup successfully ban gaya, ab purana delete ho raha hai..."
              OLD_ID=$(gh api /repos/${{ github.repository }}/actions/artifacts \
                --jq '.artifacts[] | select(.name=="vps-backup") | .id' | head -n 1)
              if [ -n "$OLD_ID" ]; then
                gh api --method DELETE /repos/${{ github.repository }}/actions/artifacts/$OLD_ID
              fi
            else
              echo "‚ùå Backup banane me error, purana safe rakha gaya."
              sleep 180
              continue
            fi

            split -b 2000M full-backup.tar.gz backup-part
            echo "‚¨ÜÔ∏è Backup upload ho raha hai..."
            gh release create $(date +'%Y%m%d%H%M%S') backup-part* --title "Auto Backup $(date)" --notes "Automated backup" || echo "‚ö†Ô∏è Upload fail"

            echo "üí§ Sleeping 3 minutes..."
            sleep 180
          done

      # Final restore to remote VPS
      - name: Restore to remote VPS after 6h
        run: |
          echo "üîÑ Final backup remote VPS me bheja ja raha hai..."
          sshpass -p "${REMOTE_VPS_PASS}" scp -o StrictHostKeyChecking=no full-backup.tar.gz ${REMOTE_VPS_USER}@${REMOTE_VPS_IP}:/root/
          sshpass -p "${REMOTE_VPS_PASS}" ssh -o StrictHostKeyChecking=no ${REMOTE_VPS_USER}@${REMOTE_VPS_IP} "sudo tar -xzp -C / -f /root/full-backup.tar.gz && sudo service mariadb start && if [ -f /root/ptero-db.sql ]; then sudo mysql < /root/ptero-db.sql; fi"
          echo "‚úÖ Remote VPS restore complete!"
