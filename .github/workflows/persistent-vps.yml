name: Persistent Pterodactyl VPS Backup

on:
  workflow_dispatch: # Manual run option

jobs:
  backup:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install required packages
        run: |
          sudo apt update
          sudo apt install -y tar openssh-client sshpass

      - name: Start Backup Loop
        run: |
          start_time=$(date +%s)
          backup_round=1

          while [ $(( $(date +%s) - start_time )) -lt 21600 ]; do
              echo "===== Backup Round #$backup_round | $(date) ====="

              backup_file="pterodactyl_backup_${backup_round}_$(date +%Y%m%d_%H%M%S).tar.gz"

              # Create new backup
              if tar -czf "$backup_file" /var/www/pterodactyl 2>/dev/null; then
                  echo "‚úÖ Backup created: $backup_file"
                  
                  # Delete old backup if more than 1 exists
                  if [ $backup_round -gt 1 ]; then
                      old_backup=$(ls -t pterodactyl_backup_*.tar.gz | tail -n 1)
                      rm -f "$old_backup"
                      echo "üóë Deleted old backup: $old_backup"
                  fi
              else
                  echo "‚ùå Backup failed in round $backup_round"
              fi

              backup_round=$((backup_round+1))
              sleep 180
          done

          echo "===== 6 Hours Complete | Final Backup Uploading... ====="

          # Send final backup to remote VPS
          latest_backup=$(ls -t pterodactyl_backup_*.tar.gz | head -n 1)

          sshpass -p "${{ secrets.REMOTE_VPS_PASS }}" scp -o StrictHostKeyChecking=no "$latest_backup" \
              ${{ secrets.REMOTE_VPS_USER }}@${{ secrets.REMOTE_VPS_IP }}:/root/

          echo "‚úÖ Final backup sent to remote VPS: $latest_backup"

          echo "===== Restoring on Remote VPS ====="
          sshpass -p "${{ secrets.REMOTE_VPS_PASS }}" ssh -o StrictHostKeyChecking=no \
              ${{ secrets.REMOTE_VPS_USER }}@${{ secrets.REMOTE_VPS_IP }} \
              "tar -xzf /root/$latest_backup -C /"

          echo "üéØ Restore completed on remote VPS."
